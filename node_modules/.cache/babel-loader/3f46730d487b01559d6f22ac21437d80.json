{"ast":null,"code":"var _jsxFileName = \"/home/ashutosht/Documents/Notes_Git/experimental/react-notes-app-master/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: 'This is my first note!',\n    date: '15/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my second note!',\n    date: '21/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my third note!',\n    date: '28/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my new note!',\n    date: '30/04/2021'\n  }]);\n  const [searchText, setSearchText] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('react-notes-app-data', JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && 'dark-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"7aC6vA37Gz04aKAby2oA+Kyj5sA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ashutosht/Documents/Notes_Git/experimental/react-notes-app-master/src/App.js"],"names":["useState","useEffect","nanoid","NotesList","Search","Header","App","notes","setNotes","id","text","date","searchText","setSearchText","darkMode","setDarkMode","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","Date","newNote","toLocaleDateString","newNotes","deleteNote","filter","note","toLowerCase","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\ttext: 'This is my first note!',\n\t\t\tdate: '15/04/2021',\n\t\t},\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\ttext: 'This is my second note!',\n\t\t\tdate: '21/04/2021',\n\t\t},\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\ttext: 'This is my third note!',\n\t\t\tdate: '28/04/2021',\n\t\t},\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\ttext: 'This is my new note!',\n\t\t\tdate: '30/04/2021',\n\t\t},\n\t]);\n\n\tconst [searchText, setSearchText] = useState('');\n\n\tconst [darkMode, setDarkMode] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst savedNotes = JSON.parse(\n\t\t\tlocalStorage.getItem('react-notes-app-data')\n\t\t);\n\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'react-notes-app-data',\n\t\t\tJSON.stringify(notes)\n\t\t);\n\t}, [notes]);\n\n\tconst addNote = (text) => {\n\t\tconst date = new Date();\n\t\tconst newNote = {\n\t\t\tid: nanoid(),\n\t\t\ttext: text,\n\t\t\tdate: date.toLocaleDateString(),\n\t\t};\n\t\tconst newNotes = [...notes, newNote];\n\t\tsetNotes(newNotes);\n\t};\n\n\tconst deleteNote = (id) => {\n\t\tconst newNotes = notes.filter((note) => note.id !== id);\n\t\tsetNotes(newNotes);\n\t};\n\n\treturn (\n\t\t<div className={`${darkMode && 'dark-mode'}`}>\n\t\t\t<div className='container'>\n\t\t\t\t<Header handleToggleDarkMode={setDarkMode} />\n\t\t\t\t<Search handleSearchNote={setSearchText} />\n\t\t\t\t<NotesList\n\t\t\t\t\tnotes={notes.filter((note) =>\n\t\t\t\t\t\tnote.text.toLowerCase().includes(searchText)\n\t\t\t\t\t)}\n\t\t\t\t\thandleAddNote={addNote}\n\t\t\t\t\thandleDeleteNote={deleteNote}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}